# See first 10 observations
head(mydata, n=10)
# chia du lieu khach hang mua gi
dt <- split(mydata$Description, mydata$CustomerID)
View(dt)
# Loading arules package
if(!require(arules)) install.packages("arules")
# Convert data to transaction level
dt2 = as(dt,"transactions")
summary(dt2)
inspect(dt2)
# Most Frequent Items
itemFrequency(dt2, type = "relative")
itemFrequencyPlot(dt2,topN = 5)
shiny::runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
shiny::runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
runApp('Z:/VKU-Study/Năm 4 - Học kỳ 1/Chuyên đề 5_IT (3)/Shiny_Cuoiky/webapp')
library(ggplot2)
library(dplyr)
library(Hmisc)
install.packages("Hmisc")
rm(list = ls())
library(ggplot2)
library(dplyr)
library(Hmisc)
library(Hmisc)
library(psych)
install.packages("psych")
library(Hmisc)
library(psych)
movie <- read.csv('movie_data.csv', stringsAsFactors = F)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
str(movie)
dim(movie)
summary(movie)
### Always start from the distribution of the data.
ggplot(aes(x = num_critic_for_reviews), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Number of reviews')
summary(movie$num_critic_for_reviews)
edit(movie)
ggplot(aes(x = imdb_score), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Scores')
summary(movie$imdb_score)
#The score distribution is left skewed, with minimum score at 1.60 and maximum score at 9.50.
ggplot(aes(x = title_year), data = movie) + geom_histogram(color='white') +
ggtitle('Histogram of Title Year')
#Most of the movies in the dataset were produced after 2000.
boxplot(imdb_score ~ title_year, data=movie, col='indianred')
title("IMDB score vs Title year")
#The score distribution is left skewed, with minimum score at 1.60 and maximum score at 9.50.
ggplot(aes(x = title_year), data = movie) + geom_histogram(color='white') +
ggtitle('Histogram of Title Year')
#Most of the movies in the dataset were produced after 2000.
boxplot(imdb_score ~ title_year, data=movie, col='indianred')
title("IMDB score vs Title year")
#However, the movies with the highest scores were produced in the 1950s, and there have been significant amount of low score movies came out in the recent years.
### Which countries produced the most movies and which countries have the highest scores?
country_group <- group_by(movie, country)
movie_by_country <- summarise(country_group,
mean_score = mean(imdb_score),
n = n())
ggplot(aes(x = country, y = n, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=6)) +
coord_flip() + ggtitle('Countries vs Number of Movies')
#However, the movies with the highest scores were produced in the 1950s, and there have been significant amount of low score movies came out in the recent years.
### Which countries produced the most movies and which countries have the highest scores?
country_group <- group_by(movie, country)
movie_by_country <- summarise(country_group,
mean_score = mean(imdb_score),
n = n())
ggplot(aes(x = country, y = n, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=6)) +
coord_flip() + ggtitle('Countries vs Number of Movies')
#The USA produced the most number of movies.
ggplot(aes(x = country, y = mean_score, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=7)) +
coord_flip() + ggtitle('Countries vs IMDB Scores')
### How about directors?
director_group <- group_by(movie, director_name, genres)
movie_by_director <- summarise(director_group,
mean_score = mean(imdb_score))
movie_by_director <- movie_by_director[67:4530,]
movie_by_director <- movie_by_director[with(movie_by_director, order(-mean_score)), ]
movie_by_director <- head(movie_by_director, 20)
ggplot(aes(x = mean_score, y = director_name), data = movie_by_director) +
geom_point(aes(color = genres), size = 2) + xlab("Mean Score") +
ylab("Director Name")+ theme_minimal() + ggtitle('Director, Genres & Scores')
library(shiny); runApp('C:/Users/Admin/Downloads/NguyenVanLieu_WebApp.r')
runApp('C:/Users/Admin/Downloads/NguyenVanLieu_WebApp.r')
runApp('NguyenVanLieu_WebApp.r')
runApp('C:/Users/Admin/Downloads/NguyenVanLieu_WebApp.r')
("dplyr")
install.packages("dplyr")
runApp('C:/Users/Admin/Downloads/NguyenVanLieu_WebApp.r')
rm(list = ls())
install.packages("psych")
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
str(movie)
str(movie)
edit(movie)
dim(movie)
summary(movie)
edit(movie)
### Always start from the distribution of the data.
ggplot(aes(x = num_critic_for_reviews), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Number of reviews')
summary(movie$num_critic_for_reviews)
dim(movie)
edit(movie)
dim(movie)
edit(movie)
install.packages("shinydashboard")
## ui.R ##
library(shinydashboard)
dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
## app.R ##
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
server <- function(input, output) {
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui, server)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
str(movie)
edit(movie)
dim(movie)
summary(movie)
### Always start from the distribution of the data.
ggplot(aes(x = num_critic_for_reviews), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Number of reviews')
#However, the movies with the highest scores were produced in the 1950s, and there have been significant amount of low score movies came out in the recent years.
### Which countries produced the most movies and which countries have the highest scores?
country_group <- group_by(movie, country)
movie_by_country <- summarise(country_group,
mean_score = mean(imdb_score),
n = n())
ggplot(aes(x = country, y = n, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=6)) +
coord_flip() + ggtitle('Countries vs Number of Movies')
rm(list = ls())
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
str(movie)
edit(movie)
dim(movie)
summary(movie)
### Always start from the distribution of the data.
ggplot(aes(x = num_critic_for_reviews), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Number of reviews')
summary(movie$num_critic_for_reviews)
ggplot(aes(x = imdb_score), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Scores')
summary(movie$imdb_score)
#The score distribution is left skewed, with minimum score at 1.60 and maximum score at 9.50.
ggplot(aes(x = title_year), data = movie) + geom_histogram(color='white') +
ggtitle('Histogram of Title Year')
### Always start from the distribution of the data.
ggplot(aes(x = num_critic_for_reviews), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Number of reviews')
summary(movie$num_critic_for_reviews)
ggplot(aes(x = imdb_score), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Scores')
summary(movie$imdb_score)
#The score distribution is left skewed, with minimum score at 1.60 and maximum score at 9.50.
ggplot(aes(x = title_year), data = movie) + geom_histogram(color='white') +
ggtitle('Histogram of Title Year')
#Most of the movies in the dataset were produced after 2000.
boxplot(imdb_score ~ title_year, data=movie, col='indianred')
title("IMDB score vs Title year")
#However, the movies with the highest scores were produced in the 1950s, and there have been significant amount of low score movies came out in the recent years.
### Which countries produced the most movies and which countries have the highest scores?
country_group <- group_by(movie, country)
movie_by_country <- summarise(country_group,
mean_score = mean(imdb_score),
n = n())
ggplot(aes(x = country, y = n, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=6)) +
coord_flip() + ggtitle('Countries vs Number of Movies')
#The USA produced the most number of movies.
ggplot(aes(x = country, y = mean_score, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=7)) +
coord_flip() + ggtitle('Countries vs IMDB Scores')
### How about directors?
director_group <- group_by(movie, director_name, genres)
movie_by_director <- summarise(director_group,
mean_score = mean(imdb_score))
movie_by_director <- movie_by_director[67:4530,]
movie_by_director <- movie_by_director[with(movie_by_director, order(-mean_score)), ]
movie_by_director <- head(movie_by_director, 20)
ggplot(aes(x = mean_score, y = director_name), data = movie_by_director) +
geom_point(aes(color = genres), size = 2) + xlab("Mean Score") +
ylab("Director Name")+ theme_minimal() + ggtitle('Director, Genres & Scores')
### Multiple Linear Regression - Variable Selection
#Time to do something serious work, I intend to predict IMDB scores from the other variables using multiple linear regression model. Because regression can't deal with missing values, I will eliminate all missing values.
movie$imdb_score <- as.numeric(impute(movie$imdb_score, mean))
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
str(movie)
edit(movie)
edit(movie)
edit(movie)
movie.dtypes
movie.shape
### Always start from the distribution of the data.
ggplot(aes(x = num_critic_for_reviews), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Number of reviews')
summary(movie$num_critic_for_reviews)
ggplot(aes(x = imdb_score), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Scores')
summary(movie$imdb_score)
#The score distribution is left skewed, with minimum score at 1.60 and maximum score at 9.50.
ggplot(aes(x = title_year), data = movie) + geom_histogram(color='white') +
ggtitle('Histogram of Title Year')
#Most of the movies in the dataset were produced after 2000.
boxplot(imdb_score ~ title_year, data=movie, col='indianred')
title("IMDB score vs Title year")
#The score distribution is left skewed, with minimum score at 1.60 and maximum score at 9.50.
ggplot(aes(x = title_year), data = movie) + geom_histogram(color='white') +
ggtitle('Histogram of Title Year')
#Most of the movies in the dataset were produced after 2000.
boxplot(imdb_score ~ title_year, data=movie, col='indianred')
title("IMDB score vs Title year")
#Most of the movies in the dataset were produced after 2000.
boxplot(imdb_score ~ title_year, data=movie, col='indianred')
title("IMDB score vs Title year")
#However, the movies with the highest scores were produced in the 1950s, and there have been significant amount of low score movies came out in the recent years.
### Which countries produced the most movies and which countries have the highest scores?
country_group <- group_by(movie, country)
movie_by_country <- summarise(country_group,
mean_score = mean(imdb_score),
n = n())
ggplot(aes(x = country, y = n, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=6)) +
coord_flip() + ggtitle('Countries vs Number of Movies')
#The USA produced the most number of movies.
ggplot(aes(x = country, y = mean_score, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=7)) +
coord_flip() + ggtitle('Countries vs IMDB Scores')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(shiny); runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
install.packages("dplyr")
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
install.packages("dplyr")
library(shiny); runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
rm(list = ls())
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
str(movie)
names(movie)[3:18]
names(movie)[1:18]
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
str(movie)
edit(movie)
dim(movie)
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
names(datamovie)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
names(datamovie)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
names(movie)
c(names(movie))
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
### Always start from the distribution of the data.
ggplot(aes(x = num_critic_for_reviews), data = movie) + geom_histogram(bins = 20, color = 'white') + ggtitle('Histogram of Number of reviews')
summary(movie$num_critic_for_reviews)
ggplot(aes(x = country, y = n, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=6)) +
coord_flip() + ggtitle('Countries vs Number of Movies')
#The USA produced the most number of movies.
ggplot(aes(x = country, y = mean_score, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=7)) +
coord_flip() + ggtitle('Countries vs IMDB Scores')
### How about directors?
director_group <- group_by(movie, director_name, genres)
#The USA produced the most number of movies.
ggplot(aes(x = country, y = mean_score, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=7)) +
coord_flip() + ggtitle('Countries vs IMDB Scores')
#However, the movies with the highest scores were produced in the 1950s, and there have been significant amount of low score movies came out in the recent years.
### Which countries produced the most movies and which countries have the highest scores?
country_group <- group_by(movie, country)
movie_by_country <- summarise(country_group,
mean_score = mean(imdb_score),
n = n())
ggplot(aes(x = country, y = n, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=6)) +
coord_flip() + ggtitle('Countries vs Number of Movies')
#The USA produced the most number of movies.
ggplot(aes(x = country, y = mean_score, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=7)) +
coord_flip() + ggtitle('Countries vs IMDB Scores')
### How about directors?
director_group <- group_by(movie, director_name, genres)
movie_by_director <- summarise(director_group,
mean_score = mean(imdb_score))
movie_by_director <- movie_by_director[67:4530,]
movie_by_director <- movie_by_director[with(movie_by_director, order(-mean_score)), ]
movie_by_director <- head(movie_by_director, 20)
ggplot(aes(x = mean_score, y = director_name), data = movie_by_director) +
geom_point(aes(color = genres), size = 2) + xlab("Mean Score") +
ylab("Director Name")+ theme_minimal() + ggtitle('Director, Genres & Scores')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
rm(list = ls())
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
str(movie)
c(names(movie))
edit(movie)
dim(movie)
summary(movie)
head(movie)
movie.hear(20)
head(100)
head(movie, 15)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/tets/dd.R')
runApp('Z:/VKU-Study/datasetforR/tets/dd.R')
install.packages(DT)
install.packages("DT")
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/HoangAnhTruong_buildwebapp/HoangAngTruong_WebApp.r')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
data = read.csv("http://statistics/data/does_vn07.csv", header = T)
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
#However, the movies with the highest scores were produced in the 1950s, and there have been significant amount of low score movies came out in the recent years.
### Which countries produced the most movies and which countries have the highest scores?
country_group <- group_by(movie, country)
movie_by_country <- summarise(country_group,
mean_score = mean(imdb_score),
n = n())
movie_by_country
sort(movie_by_country)
newdata <- movie_by_country[order(mean_score),]
newdata <- movie_by_country[order(movie_by_country$mean_score),]
View(newdata)
View(country_group)
View(movie_by_country)
ggplot(aes(x = country, y = n, fill = country), data = movie_by_country) + geom_bar(stat = 'identity') + theme(legend.position = "none", axis.text=element_text(size=6)) +
coord_flip() + ggtitle('Countries vs Number of Movies')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('testcuoiky.R')
runApp('testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
