-cast_total_facebook_likes,
-movie_imdb_link,
-plot_keywords,
-movie_facebook_likes,
-actor_1_name,
-actor_2_name,
-genres,
-movie_title,
-director_name,
-budget,
-country,-language))
View(lgm_datamovie)
lgm_predict <- glm(coloi ~ ., data=lgm_datamovie, family='binomial')
summary(lgm_predict)
search = step(lgm_predict)
search
lgm_small <- step(lgm_predict, direction = "backward", trace = FALSE)
summary(lgm_small)
anova(lgm_small)
lgm_small
mov_fh <- data.frame(
num_critic_for_reviews = 302,
duration = 169,
gross = 309404152,
num_voted_users= 471220,
facenumber_in_poster= 0,
num_user_for_reviews= 1238,
content_rating ="PG-13",
title_year = 2007,
imdb_score = 7.1,
aspect_ratio = 2.35,
genres1="Action"
)
mov_fh0 <- data.frame(
num_critic_for_reviews = 450,
duration = 150,
gross = 89289910,
num_voted_users= 181792,
facenumber_in_poster= 1,
num_user_for_reviews= 711,
content_rating ="PG-13",
title_year = 2013,
imdb_score = 6.5,
aspect_ratio = 2.35,
genres1="Action"
)
mov_fh01 <- data.frame(
num_critic_for_reviews = 322,
duration = 122,
gross = 130468626,
num_voted_users= 53607,
facenumber_in_poster= 4,
num_user_for_reviews= 432,
content_rating ="PG-13",
title_year = 2016,
imdb_score = 7.5,
aspect_ratio = 2.35,
genres1="Action"
)
prediction_TFH <- predict(lgm_small, newdata=mov_fh, type = "response")
prediction_TFH
prediction_TFH <- predict(lgm_small, type = "response", newdata = lgm_datamovieaa)
table(lgm_datamovieaa$coloi,prediction_TFH>0.5)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = T)
summary(movie)
summary(movie$imdb_score)
summary(movie$imdb_score[1])
summary(movie$imdb_score)[1]
summary(movie$imdb_score)[2]
summary(movie$imdb_score)[2][1]
summary(movie$imdb_score)[2][2]
summary(movie$imdb_score)[2][0]
summary(movie$imdb_score)[2][1]
mean(movie$imdb_score)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
col(movie)
dim(movie)
dim(movie)[1]
dim(movie)[2]
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
rm(list = ls())
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = T)
summary(movie$imdb_score)[2][1]
mean(movie$imdb_score)
dim(movie)[2]
judgeAndSplit <- function(x) {
sp = strsplit(x, '[|]')[[1]][1]
return(sp)
}
View(movie)
genres_name = as.character(movie$genres)
newmovie = movie %>%
mutate(genres1 = as.factor(sapply(genres_name, judgeAndSplit)))
newmovie <- na.omit(newmovie)
lm_datamovieaa = subset(newmovie, newmovie$country == "USA")
View(lm_datamovieaa)
lm_datamovie <- select(lm_datamovieaa, c(
color ,
num_critic_for_reviews,
duration ,
num_voted_users,
facenumber_in_poster,
num_user_for_reviews,
content_rating ,
title_year ,
genres1,
imdb_score
))
View(lm_datamovie)
#View(lm_datamovie)
#dim(lm_datamovie)
lm_mov <- lm(imdb_score ~ ., data=lm_datamovie)
summary(lm_mov)
lm_small <- step(lm_mov, direction = "backward", trace = FALSE)
summary(lm_small)
anova(lm_small)
###
pairs.panels(lm_datamovie, col='red')
View(lm_datamovie)
mov_fh <- data.frame(
color = "Color",
num_critic_for_reviews = 302,
duration = 169,
num_voted_users= 471220,
facenumber_in_poster= 0,
num_user_for_reviews= 1238,
content_rating ="PG-13",
title_year = 2007,
genres1="Action"
)
prediction_TFH <- predict(lm_small, newdata=mov_fh, interval="confidence")
prediction_TFH
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
rm(list = ls())
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = T)
summary(movie$imdb_score)[2][1]
mean(movie$imdb_score)
dim(movie)[2]
judgeAndSplit <- function(x) {
sp = strsplit(x, '[|]')[[1]][1]
return(sp)
}
View(movie)
genres_name = as.character(movie$genres)
newmovie = movie %>%
mutate(genres1 = as.factor(sapply(genres_name, judgeAndSplit)))
newmovie <- na.omit(newmovie)
lm_datamovieaa = subset(newmovie, newmovie$country == "USA")
View(lm_datamovieaa)
lm_datamovie <- select(lm_datamovieaa, c(
color ,
num_critic_for_reviews,
duration ,
num_voted_users,
facenumber_in_poster,
num_user_for_reviews,
content_rating ,
title_year ,
genres1,
imdb_score
))
View(lm_datamovie)
#View(lm_datamovie)
#dim(lm_datamovie)
lm_mov <- lm(imdb_score ~ ., data=lm_datamovie)
summary(lm_mov)
lm_small <- step(lm_mov, direction = "backward", trace = FALSE)
summary(lm_small)
anova(lm_small)
###
pairs.panels(lm_datamovie, col='red')
View(lm_datamovie)
mov_fh <- data.frame(
color = "Color",
num_critic_for_reviews = 302,
duration = 169,
num_voted_users= 471220,
facenumber_in_poster= 0,
num_user_for_reviews= 1238,
content_rating ="PG-13",
title_year = 2007,
genres1="Action"
)
prediction_TFH <- predict(lm_small, newdata=mov_fh, interval="confidence")
prediction_TFH
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = T)
View(movie)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
View(movie)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = T)
View(movie)
datamovie <- subset(movie$budget>0)
datamovie <- movie.subset(movie$budget>0)
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
datamovie <- movie.subset(movie$budget>0)
datamovie <- subset(movie,movie$budget>0)
View(datamovie)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
movie_data_predict <- subset(datamovie, datamovie$budget > 0)
movie_data_predict = movie_data_predict %>%
subset(!is.na(gross)) %>%
subset(!is.na(budget))
movie_data_predict = subset(movie_data_predict, -movie_data_predict$budget[2988])
movie_data_predict = subset(movie_data_predict, -movie_data_predict$budget[,2988])
movie_data_predict = subset(movie_data_predict, -movie_data_predict$budget[,2988])
movie_data_predict = subset(movie_data_predict, -c(2988))
movie_data_predict =movie_data_predict[ -c(2988)]
View(movie_data_predict)
movie_data_predict =movie_data_predict[ -c(2988), ]
View(movie_data_predict)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
movie_data_predict <- subset(datamovie, datamovie$budget > 0)
movie_data_predict = movie_data_predict %>%
subset(!is.na(gross)) %>%
subset(!is.na(budget))
movie_data_predict =movie_data_predict[ -c(2988), ]
View(movie_data_predict)
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
movie_data_predict <- subset(datamovie, datamovie$budget > 0)
movie_data_predict = movie_data_predict %>%
subset(!is.na(gross)) %>%
subset(!is.na(budget))
movie_data_predict =movie_data_predict[ -c(2988), ]
View(movie_data_predict)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
movie_data_predict <- subset(datamovie, datamovie$budget > 0)
movie_data_predict = movie_data_predict %>%
subset(!is.na(gross)) %>%
subset(!is.na(budget))
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
movie_data_predict <- subset(datamovie, datamovie$budget > 0)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
movie_data_predict <- subset(movie, datamovie$budget > 0)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = F)
movie_data_predict <- subset(movie, movie$budget > 0)
movie_data_predict = movie_data_predict %>%
subset(!is.na(gross)) %>%
subset(!is.na(budget))
movie_data_predict =movie_data_predict[ -c(2988), ]
View(movie_data_predict)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
rm(list = ls())
f <- file.choose()
df <- read.csv(f)
library(ggplot2)
View(df)
dim(df)
### imdb_score
hist <- qplot(df$imdb_score, geom = "histogram", xlab = "IMDB score", ylab = "Count", fill=I("blue"),
col=I("red"),
binwidth = 1,
alpha=I(.5))+  scale_color_manual(name = "statistics", values = c(mean = "red"))
### imdb_score
hist <- qplot(df$imdb_score, geom = "histogram", xlab = "IMDB score", ylab = "Count", fill=I("blue"),
col=I("red"),
binwidth = 1,
alpha=I(.5))+  scale_color_manual(name = "statistics", values = c(mean = "red"))
hist
boxplot(df$imdb_score)
rm(list = ls())
f <- file.choose()
df <- read.csv(f)
library(ggplot2)
View(df)
dim(df)
### imdb_score
hist <- qplot(df$imdb_score, geom = "histogram", xlab = "IMDB score", ylab = "Count", fill=I("blue"),
col=I("red"),
binwidth = 1,
alpha=I(.5))+  scale_color_manual(name = "statistics", values = c(mean = "red"))
hist
boxplot(df$imdb_score)
plot(df$imdb_score, main = "Äiá»m phim do imbd ÄÃ¡nh giÃ¡")
### duration
hist1 <- qplot(df$duration, geom = "histogram", xlab = "Thá»i lÆ°á»£ng", ylab = "Count", fill=I("black"),
col=I("red"),
binwidth = 1,
alpha=I(.5))+
scale_color_manual(name = "statistics", values = c(mean = "red"))
hist1
boxplot(df$duration)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
### num_user_for_reviews
hist2 <- qplot(df$num_user_for_reviews, geom = "histogram", xlab = "Reviews", ylab = "Count", fill=I("black"),
col=I("green"),
binwidth = 1,
alpha=I(.5))+
scale_color_manual(name = "statistics", values = c(mean = "grey"))
hist2
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = T)
View(movie)
topDirectors = movie %>%
subset(director_name != "") %>%
group_by(director_name) %>%
summarise(director_movies_count = n())
View(topDirectors)
topDirectors = movie %>%
subset(director_name != "") %>%
group_by(director_name) %>%
summarise(director_movies_count = n())%>%
filter(director_movies_count > 1)
View(topDirectors)
count(topDirectors)
library(ggpubr)
library(factoextra)
library(ggplot2)
library(dplyr)
library(Hmisc)
library(psych)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', stringsAsFactors = T)
View(movie)
topDirectors = movie %>%
subset(director_name != "") %>%
group_by(director_name) %>%
summarise(director_movies_count = n())%>%
filter(director_movies_count > 1)
View(topDirectors)
count(topDirectors)
# Compute k-means with k = 3
set.seed(123)
res.km <- kmeans(topDirectors, 3, nstart = 25)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', na.strings = T)
View(movie)
topDirectors = movie %>%
subset(director_name != "") %>%
group_by(director_name) %>%
summarise(director_movies_count = n())%>%
filter(director_movies_count > 1)
View(topDirectors)
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
topDirectors = movie %>%
subset(director_name != "") %>%
group_by(director_name) %>%
summarise(mean_score = mean(imdb_score))%.%
summarise(director_movies_count = n())%>%
filter(director_movies_count > 1)
topDirectors = movie %>%
subset(director_name != "") %>%
group_by(director_name) %>%
summarise(mean_score = mean(imdb_score))%>%
summarise(director_movies_count = n())%>%
filter(director_movies_count > 1)
View(topDirectors)
topDirectors = movie %>%
subset(director_name != "") %>%
group_by(director_name) %>%
summarise(director_movies_count = n())%>%
filter(director_movies_count > 1)
View(topDirectors)
topDirectors = movie %>%
subset(director_name != "") %>%
group_by(director_name) %>%
subset(mean_score = mean(imdb_score))%>%
summarise(director_movies_count = n())%>%
filter(director_movies_count > 1)
View(topDirectors)
topDirectors = movie %>%
subset(director_name != "") %>%
group_by(director_name) %>%
subset(mean_score = mean(imdb_score))%>%
summarise(director_movies_count = n(), meanscore = mean(imdb_score))%>%
filter(director_movies_count > 1)
View(topDirectors)
res.km <- kmeans(topDirectors, 3, nstart = 25)
# Compute k-means with k = 3
data_scale = scale(topDirectors)
# Compute k-means with k = 3
data_ss = select(topDirectors, c(2,3))
data_scale = scale(topDirectors)
# Compute k-means with k = 3
data_ss = select(topDirectors, c(2,3))
data_scale = scale(data_ss)
irisdata = dist(data_scale)
fviz_nbclust(data_scale, kmeans, method = "wss")+labs(subtitle = "Ebow")
km.out <- kmeans(data_scale, centers = 5, nstart = 100)
print(km.out)
fviz_cluster(list(data= data_scale, cluster= km.out))
fviz_cluster(list(data= data_scale, cluster= km.out$cluster))
km.out <- kmeans(data_scale, centers = 5, nstart = 2)
print(km.out)
fviz_cluster(list(data= data_scale, cluster= km.out$cluster))
#fviz_cluster(list(data= data_scale, cluster= km.out$cluster))
fviz_cluster(km.out)
#fviz_cluster(list(data= data_scale, cluster= km.out$cluster))
fviz_cluster(data = data_scale ,km.out)
#fviz_cluster(list(data= data_scale, cluster= km.out$cluster))
fviz_cluster(data = data_scale ,km.out, geom = c("point"),ellipse.type = "euclid")
library("factoextra")
# K-means clustering
km.res <- eclust(df, "kmeans", k = 4,
nstart = 25, graph = FALSE)
# k-means group number of each observation
head(km.res$cluster, 15)
library("factoextra")
# K-means clustering
km.res <- eclust(data_scale, "kmeans", k = 4,
nstart = 25, graph = FALSE)
# k-means group number of each observation
head(km.res$cluster, 15)
##     Alabama      Alaska     Arizona    Arkansas  California    Colorado
##           4           3           3           4           3           3
## Connecticut    Delaware     Florida     Georgia      Hawaii       Idaho
##           2           2           3           4           2           1
##    Illinois     Indiana        Iowa
##           3           2           1
# Visualize k-means clusters
fviz_cluster(km.res,  frame.type = "norm", frame.level = 0.68)
# K-means clustering
km.res <- eclust(data_scale, "kmeans", k = 3,
nstart = 25, graph = FALSE)
# k-means group number of each observation
head(km.res$cluster, 15)
##     Alabama      Alaska     Arizona    Arkansas  California    Colorado
##           4           3           3           4           3           3
## Connecticut    Delaware     Florida     Georgia      Hawaii       Idaho
##           2           2           3           4           2           1
##    Illinois     Indiana        Iowa
##           3           2           1
# Visualize k-means clusters
fviz_cluster(km.res,  frame.type = "norm", frame.level = 0.68)
km.out <- kmeans(data_scale, centers = 3, nstart = 2)
print(km.out)
fviz_cluster(list(data= data_scale, cluster= km.out$cluster))
km.out <- kmeans(data_scale, centers = 6, nstart = 2)
print(km.out)
fviz_cluster(list(data= data_scale, cluster= km.out$cluster))
View(topDirectors)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', na.strings = T)
View(movie)
View(movie)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', na.strings = T)
View(movie)
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', na.strings = T)
View(movie)
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
View(movie)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
View(movie)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
movie <- read.csv('Z:\\VKU-Study\\datasetforR\\Cuoiky\\movie_data.csv', na.strings = T)
View(movie)
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
library(shiny); runApp('Z:/VKU-Study/datasetforR/Cuoiky/testcuoiky.R')
